- name: determine swarm status
  shell: "docker info | egrep '^Swarm: ' | cut -d ' ' -f2"
  register: swarm_status

- name: initialize swarm cluster
  shell: docker swarm init --advertise-addr={{ hostvars['prod1']['ansible_host'] }}:2377
  when: "'inactive' in swarm_status.stdout_lines"

- name: determine swarm status
  shell: "docker info | egrep '^Swarm: ' | cut -d ' ' -f2"
  until: "'inactive' not in swarm_status.stdout_lines"
  retries: 3
  delay: 10
  register: swarm_status

- name: check if portainer service is running
  shell: "docker service ls --filter name=portainer --quiet | wc -l"
  when: "'inactive' not in swarm_status.stdout_lines"
  register: status_portainer

- name: provision portainer docker service
  shell: "docker service create \
              --name portainer \
              --publish 9000:9000 \
              --replicas=1 \
              --constraint 'node.role == manager' \
              --mount type=bind,src=/var/run/docker.sock,dst=/var/run/docker.sock \
              portainer/portainer"
  when: "'1' not in status_portainer.stdout_lines[0]"