pipeline {
    agent none
    stages {
        stage ("Static code analysis"){
	    agent {
                label "master"
            }
            steps {
	            sh "/usr/local/sonar-scanner-3.2.0.1227-linux/bin/sonar-scanner -Dsonar.login=admin -Dsonar.password=admin -Dsonar.projectVersion=${BUILD_NUMBER} -Dsonar.branch=master -Dsonar.projectKey=test -Dsonar.sources=app/ -Dsonar.exclusions=app/vendor/**"
            }
        }
        stage ("Prepare the docker app image"){
            agent {
                label "master"
            }
            steps {
                sh "docker run --rm --volume ${WORKSPACE}/app:/app composer install"
                sh "${WORKSPACE}/app/docker/build.sh test ${BUILD_NUMBER}" 
                sh "docker run --rm -d --name test-${BUILD_NUMBER} test/app-example:${BUILD_NUMBER}"
            }
        }
        stage ("Run tests") {
            parallel {
                stage ("Run unit tests"){
                    agent {
                        label "master"
                    }
                    steps {
                        sh "docker exec test-${BUILD_NUMBER} php vendor/bin/codecept run unit"
                    }
                }
                stage ("Run Component tests"){
                    agent {
                        label "master"
                    }
                    steps {
                        sh "docker exec test-${BUILD_NUMBER} php vendor/bin/codecept run functional"
                    }
                }
                stage ("Run E2E tests"){
                    agent {
                        label "master"
                    }
                    steps {
                        sh "docker exec test-${BUILD_NUMBER} php vendor/bin/codecept run acceptance"
                    }
                }
            }
        }
        stage ("Deploy app in Test server"){
            agent {
                label "master"
            }
            steps {
                sh "deploy"
            }
        }
    }
    post {
        always {
            node("master") {
                sh "docker stop test-${BUILD_NUMBER}"
                sh "docker rmi test/app-example:${BUILD_NUMBER}"
            }
        }
    }
}
